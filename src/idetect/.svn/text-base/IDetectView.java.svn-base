/*
 * IDetectView.java
 */
package idetect;

import com.sun.xml.internal.fastinfoset.util.StringArray;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.omg.CORBA.Environment;

/**
 * The application's main frame.
 */
public class IDetectView extends FrameView {

    public IDetectView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String) (evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer) (evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = IDetectApp.getApplication().getMainFrame();
            aboutBox = new IDetectAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        IDetectApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane2 = new javax.swing.JEditorPane();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(idetect.IDetectApp.class).getContext().getResourceMap(IDetectView.class);
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jEditorPane2.setName("jEditorPane2"); // NOI18N
        jScrollPane2.setViewportView(jEditorPane2);

        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        jTextField2.setText(resourceMap.getString("jTextField2.text")); // NOI18N
        jTextField2.setName("jTextField2"); // NOI18N

        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(resourceMap.getString("jButton3.text")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText(resourceMap.getString("jButton4.text")); // NOI18N
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText(resourceMap.getString("jButton5.text")); // NOI18N
        jButton5.setName("jButton5"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText(resourceMap.getString("jButton6.text")); // NOI18N
        jButton6.setName("jButton6"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText(resourceMap.getString("jButton7.text")); // NOI18N
        jButton7.setName("jButton7"); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText(resourceMap.getString("jButton8.text")); // NOI18N
        jButton8.setName("jButton8"); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText(resourceMap.getString("jButton9.text")); // NOI18N
        jButton9.setName("jButton9"); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane2))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton9)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton7)
                                .addGap(101, 101, 101)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addComponent(jButton8)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addGap(37, 37, 37)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8)
                            .addComponent(jButton2)
                            .addComponent(jButton1)
                            .addComponent(jButton6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton5)
                            .addComponent(jButton3))))
                .addGap(23, 23, 23)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(idetect.IDetectApp.class).getContext().getActionMap(IDetectView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 703, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 533, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jEditorPane1.setName("jEditorPane1"); // NOI18N
        jScrollPane1.setViewportView(jEditorPane1);

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        WebSite w = new WebSite(jTextField1.getText(), jTextField2.getText(), true, true, true, true, true);
        WebSite web = new WebSite("http://www." + jTextField1.getText(), jTextField2.getText(), true, true, true, true, true);
        //Boolean o = web.getActive();
        //web.setActive(o);
        //jEditorPane2.setText(o.toString());
        ArrayList<String> ar = new ArrayList<String>();
        ArrayList<WebSite> ww = new ArrayList<WebSite>();
        /*  try {
        ar = w.webSiteCollectionStatues();
        jEditorPane2.setText(ar.toString());
        } catch (Exception ex) {
        ar.add(Boolean.FALSE);


        } */
        ar = w.generateEnumeration();
        /* ww=w.deleteRepeatedWebsites(ar);
        ar.clear();
        for(int t = 0;t<ww.size();t++)
        {
        ar.add(ww.get(t).getUrl()+ww.get(t).getTopLevel());

        }*/
        //jEditorPane2.setText(ar.toString());
        // w.checkUrl(w.getUrl());
        w.splitEnumerationArray(ar);
        //jEditorPane2.setText(ar.toString());
       /* System.out.println("The Original size is  "+ar.size());
        System.out.println("1st  "+w.thread1.size());
        System.out.println("2nd  "+w.thread2.size());
        System.out.println("3rd  "+w.thread3.size());
        System.out.println("4th  "+w.thread4.size());*/
        iDetectThreads thread1 = new iDetectThreads("1st Thread", w.thread1);
        iDetectThreads thread2 = new iDetectThreads("2nd thread", w.thread2);
        iDetectThreads thread3 = new iDetectThreads("3rd thread", w.thread3);
        iDetectThreads thread4 = new iDetectThreads("4th thread", w.thread4);
        Thread th1 = new Thread(thread1);
        Thread th2 = new Thread(thread2);
        Thread th3 = new Thread(thread3);
        Thread th4 = new Thread(thread4);
        th1.start();
        th2.start();
        th3.start();
        th4.start();
        try {
            Thread.currentThread().sleep(1000);
        } catch (Exception e) {
        }
//        jEditorPane2.setText(thread1.threadWebSiteArray.get(0).getUrl());
        //      jTextField1.setText(thread2.threadWebSiteArray.get(0).getUrl());








    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        WebSite webSites = new WebSite(jTextField1.getText(), jTextField2.getText(), true, true, true, true, true);
        Connection c = new Connection();
        //String html = c.getAnySourceCode("https://www.paypal.com");
        DBConnection dbc = new DBConnection();
        String URL = jTextField1.getText(); /// Phishing website URL ///
        String html = c.getAnySourceCode(URL); //// Phishing website ////

        //  jEditorPane2.setText(html);
        String title = webSites.checkingTitleTag(html); ///// bring the <title></title> from phishing source code ////
        title = webSites.formatGoogleQuery(title); ///// prepare the title for Google query ///
        //System.out.println(title);
        String save = c.GOOGLE_QUERY + title; /// but the title in Google query ///
        c.getSourceCode(save); //// Get HTML for the Google Search Result page (MUST USING OLD WAY BECAUSE 403 HTTP REQUEST) //
        Object content = c.content;
        String mime = c.MIMEtype;
        String temp = "";
        if (mime.equals("text/html") && content instanceof String ) {
            temp = (String) content; /// HTML code for Search Result page ////
        }
        if(temp.contains("Search Result")){
        Boolean state = webSites.sourceCodeTechnique(temp, URL); /// result of sourceCode technique ///
        jEditorPane2.setText(state.toString());}
        else
            jEditorPane2.setText("trueeeee");





    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        WebSite webSites = new WebSite(jTextField1.getText(), jTextField2.getText(), true, true, true, true, true);
        ArrayList<Boolean> state = new ArrayList<Boolean>();
        ArrayList<WebSite> web = new ArrayList<WebSite>();
        ArrayList<String> ar = new ArrayList<String>();
        ar = webSites.generateEnumeration();
        Boolean bb;
        //jEditorPane2.setText(ar.toString() );
        web = webSites.initialWebSites(ar);
        for (int i = 0; i < web.size(); i++) {
            bb = web.get(i).getActive();
            System.out.println(bb.toString() + "  " + web.get(i).getUrl() + web.get(i).getTopLevel());
        }

        // ar.clear();
        //ar=webSites.getURLs(web);
        //jEditorPane2.setText(ar.toString());





        // jEditorPane2.setText(state.toString());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        WebSite w = new WebSite(jTextField1.getText(), jTextField2.getText(), false, true, true, true, true);
        Connection c = new Connection();
        boolean b = c.getSourceCode("http://www.google.com");
        Object content = c.content;
        String mime = c.MIMEtype;
        if (mime.equals("text/html") && content instanceof String) {
            String html = (String) content;
            System.out.println(html.length() + "  " + b);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    @SuppressWarnings("static-access")
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        WebSite w = new WebSite(jTextField1.getText(), jTextField2.getText(), false, false, false, false, false);
        ArrayList<String> ar = new ArrayList<String>();
        ar = w.generateEnumeration();
        //System.out.println(ar);
        w.splitEnumerationArray(ar);
        iDetectThreads thread1 = new iDetectThreads("1st Thread", w.thread1);
        iDetectThreads thread2 = new iDetectThreads("2nd thread", w.thread2);
        iDetectThreads thread3 = new iDetectThreads("3rd thread", w.thread3);
        iDetectThreads thread4 = new iDetectThreads("4th thread", w.thread4);
        iDetectThreads thread5 = new iDetectThreads("5th thread", w.thread5);
        iDetectThreads thread6 = new iDetectThreads("6th thread", w.thread6);
        Thread t1 = new Thread(thread1);
        Thread t2 = new Thread(thread2);
        Thread t3 = new Thread(thread3);
        Thread t4 = new Thread(thread4);
        Thread t5 = new Thread(thread5);
        Thread t6 = new Thread(thread6);
        t1.start();
        t2.start();
        t3.start();
        t4.start();
        t5.start();
        t6.start();
        try {
            Thread.currentThread().sleep(1000);
        } catch (Exception ee) {
            JOptionPane.showMessageDialog(null, ee.toString());
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Connection c = new Connection();
        String html = c.getAnySourceCode("https://www.paypal.com");
        // WebSite w = new WebSite(jTextField1.getText(), jTextField2.getText(), false, false, false, false, false);

        //jEditorPane2.setText("Coool   " + html);
        System.out.println("DONE HTML");
        DBConnection dbc = new DBConnection();
        dbc.insertWebSite("https://www.paypal.com", "False", html, "true");

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        DBConnection dbc = new DBConnection();
        Connection c = new Connection();
        //  String html = c.getAnySourceCode("https://www.paypal.com");
        String html = c.getAnySourceCode("https://www.paypal.com/");
        dbc.insertWebSite("https://www.paypal.com/", "true", html, "false");

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        Connection c = new Connection();
        /*  boolean a = c.getSourceCode(jTextField1.getText());
        Object content1 = c.content;
        String MIME1 = c.MIMEtype;
        boolean b = c.getSourceCode(jTextField1.getText());
        Object content2 = c.content;
        String MIME2 = c.MIMEtype;
        String html1 = "";
        String html2 = "";
        if (MIME1.equals("text/html") && content1 instanceof String) {
        html1 = (String) content1;
        html2 = (String) content2;
        }
        DBConnection dbc = new DBConnection();
        dbc.insertJustSourceCode(jTextField1.getText(), html1);
        dbc.insertJustSourceCode(jTextField1.getText(), html2);
        int count = dbc.getTotalRowsNumber();
        html1 = dbc.getSourceCodeForUrl(jTextField1.getText(), count);
        html2 = dbc.getSourceCodeForUrl(jTextField1.getText(), count-1);
        html1 = html1.trim();
        html2 = html2.trim();*/
        String html1 = c.getAnySourceCode(jTextField1.getText());
        String html2 = c.getAnySourceCode(jTextField1.getText());
        DBConnection dbc = new DBConnection();
        dbc.insertJustSourceCode(jTextField1.getText(), html1);
        dbc.insertJustSourceCode(jTextField1.getText(), html2);
        int count = dbc.getTotalRowsNumber();
        html1 = dbc.getSourceCodeForUrl(jTextField1.getText(), count);
        html2 = dbc.getSourceCodeForUrl(jTextField1.getText(), count - 1);
        int startIndex = html1.indexOf("<body");
        int endIndex = html1.indexOf("</body>");
        int startIndex1 = html2.indexOf("<body");
        int endIndex1 = html2.indexOf("</body>");

        html1 = html1.substring(startIndex, endIndex);
        html2 = html2.substring(startIndex1, endIndex1);
        jEditorPane2.setText(html2);
        if (html1.equals(html2)) {
            System.out.println("YEsss");
        } else {
            System.out.println(html1.length() + "  " + html2.length());
        }


    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
     
        
       
    }//GEN-LAST:event_jButton9ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JEditorPane jEditorPane1;
    public javax.swing.JEditorPane jEditorPane2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables
    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    private JDialog aboutBox;
}
